/**
 * Search
 */
$icon-size: 1em;

.search-wrapper {
  @include layer(2);
  position: sticky;
  top: -1px;
}

.search-bar {
  @include flex;
  @include gutters(horiz, full, margin);
  @include gutters(vert);
  @include layer(2);
  align-items: center;
  background-color: var(--bg-color);
  border-bottom: 1px solid $black;
  border-top: 5px solid var(--bg-color-inverted);
  flex-grow: 0;
  font-size: $fs-1;
  position: sticky;
  top: -1px;
}

.search-icon {
  @include size($icon-size);
  color: var(--search-placeholder-color);
  pointer-events: none;
  position: relative;
  transition: $transition;

  .search-bar:focus-within & {
    color: $black;
  }
}

.search-input {
  @include focus-reset;
  background: none;
  color: var(--text-color);
  flex: 1 0 100%;
  height: 100%;
  margin-left: -$icon-size;
  padding-left: $icon-size * 1.75;

  &::placeholder {
    color: var(--search-placeholder-color);
  }
}

/**
 * Page
 */
.index__list {
  @include gutters(horiz, full);
  @include layer(1);
}

.js-search-results {
  &:not(.show) {
    display: none;
  }
}

.js-index-list {
  &.hide {
    display: none;
  }
}

.no-results {
  color: var(--search-placeholder-color);
  padding-top: $sp0;
}

/**
 * Entries, Collections, & Series
 */
.index__type,
.index__date,
.index__count {
  flex: 0 1 50%;
  font-size: $fs-3;
  font-weight: inherit;
  line-height: 1;
  margin-bottom: var(--gutter-full);
  text-transform: uppercase;

  @include mq($md) {
    flex: 0 1 15%;
    margin-bottom: 0;

    .index__nest__item & {
      flex: 0 1 calc(15% + var(--gutter-half) / 3);
    }
  }

  @include mq($lg) {
    font-size: $fs-2;
  }
}

.index__type {
  @include mq($md, max) {
    padding-left: calc(var(--gutter-full) + var(--gutter-half));

    .index__nest__item & {
      padding-left: calc(var(--gutter-full) + var(--gutter-half) + 4px);
    }
  }
}

.index__date,
.index__count {
  text-align: right;
}

.index__item,
.index__nest .index__title {
  border-left: 1px solid $black;
}

.index__item {
  border-bottom: 1px solid $black;
  margin-bottom: var(--gutter-half);
  margin-top: var(--gutter-full);
  position: relative;
}

.index__link,
.index__expand-label,
.index__expand-input {
  @include focus-reset;
}

.index__expand-input {
  -webkit-appearance: none;
  appearance: none;
  box-sizing: content-box;
  cursor: s-resize;
  display: block;
  height: calc(1.125em + var(--gutter-full)); // match label height exactly
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  transition: none;

  @include on-focus {
    ~ .index__expand-label {
      color: $blue;
    }
  }

  &:checked {
    cursor: n-resize;

    ~ .index__nest {
      height: auto;
    }

    ~ .index__expand-label {
      font-weight: $everett-bold;

      .index__icon--plus {
        display: none;
      }

      .index__icon--minus {
        display: inline-block;
      }
    }
  }
}

.index__link,
.index__expand-label {
  @include gutters(horiz);
  align-items: baseline;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  user-select: none;

  @include mq($md) {
    flex-wrap: nowrap;
  }
}

.index__link {
  align-items: baseline;
  justify-content: space-between;

  @include on-focus {
    color: $red;
  }
}

.index__title {
  @include flex;
  @include padding(0.25em null);
  align-items: center;
  color: currentColor;
  flex-wrap: wrap;
  flex: 0 0 100%;

  @include mq($md) {
    flex-wrap: nowrap;
    flex: 0 1 70%;
  }

  .index__nest__item & {
    @include padding(calc(var(--gutter-half) / 2) null);
    flex: 0 1 100%;
    justify-content: space-between;
    padding-left: var(--gutter-half);
  }
}

.index__title__text {
  flex: 0 0 100%;

  @include mq($md) {
    flex: 0 1 calc(70% + var(--gutter-half) / 3);
  }
}

.index__icon {
  @include size(0.75em);
  margin-right: var(--gutter-half);

  @include on-focus('.index__link') {
    transform: rotate(-45deg);
  }

  &--minus {
    display: none;
  }
}

.index__nest {
  height: 0;
  overflow: hidden;

  &:focus-within {
    height: auto;
  }
}
